name: CI Pipeline

on:
  push:
    branches:
      - main
      - prod
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run'
        required: true
        default: 'validate_terraform'
        type: choice
        options:
          - validate_terraform
          - aplicar_terraform
          - install_ingress_nginx
          - install_prometheus
          - destroy_terraform

env:
  TF_IN_AUTOMATION: "true"
  KUBECONFIG: /etc/kubernetes/admin.conf

jobs:
  validate_terraform:
    if: ${{ github.event.inputs.job == 'validate_terraform' || github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'validate_terraform' }}
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Terraform init
        run: terraform init --backend=true
      - name: Terraform format
        run: terraform fmt --recursive
      - name: Terraform validate
        run: terraform validate
      - name: Terraform plan
        env:
          CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
        run: terraform plan -var "cidr_block=$CIDR_BLOCK" -var "project_name=$PROJECT_NAME" -var "cluster_name=$CLUSTER_NAME"

  aplicar_terraform:
    if: ${{ github.event.inputs.job == 'aplicar_terraform' || github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'aplicar_terraform' }}
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Terraform init
        run: terraform init --backend=true
      - name: Terraform apply
        env:
          CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
        run: terraform apply --auto-approve -var "cidr_block=$CIDR_BLOCK" -var "project_name=$PROJECT_NAME" -var "cluster_name=$CLUSTER_NAME"

  install_ingress_nginx:
    if: ${{ github.event.inputs.job == 'install_ingress_nginx' || github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'install_ingress_nginx' }}
    runs-on: ubuntu-latest
    container:
      image: amazonlinux:2
    steps:
      - name: Install gzip
        run: | 
          yum install -y gzip tar
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Install utilities
        run: |
          yum install -y curl unzip tar gzip
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl
      - name: Install aws-cli
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          mv /tmp/eksctl /usr/local/bin
      - name: Configure kubectl
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.PROJECT_NAME }}-eks_cluster --region ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Apply Ingress NGINX
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.10.1/deploy/static/provider/aws/deploy.yaml --validate=false

  install_prometheus:
    if: ${{ github.event.inputs.job == 'install_prometheus' || github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'install_ingress_nginx' }}
    runs-on: ubuntu-latest
    container:
      image: amazonlinux:2
    steps:
      - name: Install gzip
        run: | 
          yum install -y gzip tar
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Install utilities
        run: |
          yum install -y curl unzip tar gzip
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          mv ./kubectl /usr/local/bin/kubectl
      - name: Install aws-cli
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
      - name: Install eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          mv /tmp/eksctl /usr/local/bin
      - name: Configure kubectl
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG_CONTENT }}
        run: |
          mkdir -p ~/.kube
          echo "$KUBECONFIG_CONTENT" | base64 -d > ~/.kube/config
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ secrets.PROJECT_NAME }}-eks_cluster --region ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Apply Prometheus
        run: |       
          kubectl create -f  https://github.com/prometheus-operator/kube-prometheus/tree/main/manifests/setup  --validate=false
          kubectl apply -f  https://github.com/prometheus-operator/kube-prometheus/tree/main/manifests/  --validate=false
  destroy_terraform:
    if: ${{ github.event.inputs.job == 'destroy_terraform' || github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'destroy_terraform' }}
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Terraform init
        run: terraform init --backend=true
      - name: Terraform destroy
        env:
          CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
        run: terraform destroy --auto-approve -var "cidr_block=$CIDR_BLOCK" -var "project_name=$PROJECT_NAME" -var "cluster_name=$CLUSTER_NAME"
